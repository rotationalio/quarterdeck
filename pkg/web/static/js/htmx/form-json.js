(()=>{let api;function splitKey(key){return key.replace(/\[\s*\]/g,"[-1]").replace(/\]/g,"").split(/\[|\./)}htmx.defineExtension("form-json",{init:function(apiRef){api=apiRef},onEvent:function(name,evt){"htmx:configRequest"===name&&(evt.detail.headers["Content-Type"]="application/json")},encodeParameters:function(xhr,parameters,elt){let object={};xhr.overrideMimeType("text/json");for(var[key,value]of parameters.entries()){var input=elt.querySelector(`[name="${key}"]`),input=input?((input,value,inputType)=>"number"==inputType||"range"==inputType?Array.isArray(value)?value.map(Number):Number(value):"checkbox"===inputType?input.defaultValue||!0:value)(input,value,input.type):value;Object.hasOwn(object,key)?(Array.isArray(object[key])||(object[key]=[object[key]]),object[key].push(input)):object[key]=input}let vals=api.getExpressionVars(elt);return Object.keys(object).forEach(function(key){object[key]=(Object.hasOwn(vals,key)?vals:object)[key]}),api.hasAttribute(elt,"ignore-deep-key")||(xhr=(map=>{let flagMap={};for(var key in map){let parts=splitKey(key);parts.forEach((part,i)=>{var path=parts.slice(0,i+1).join("."),isLastPart=i===parts.length-1,i=!isLastPart&&!isNaN(Number(parts[i+1]));isLastPart?flagMap[path]="val":flagMap.hasOwnProperty(path)?"val"!==flagMap[path]&&i||(flagMap[path]="obj"):flagMap[path]=i?"arr":"obj"})}return flagMap})(object),object=((flagMap,map)=>{var out={};for(let key in map){let parts=splitKey(key),current=out;parts.forEach((part,i)=>{var path=parts.slice(0,i+1).join(".");i===parts.length-1?"obj"===flagMap[path]?current[part]={"":map[key]}:"-1"===part?(i=map[key],Array.isArray(i)?current.push(...i):current.push(i)):current[part]=map[key]:current.hasOwnProperty(part)||(current[part]="arr"===flagMap[path]?[]:{}),current=current[part]})}return out})(xhr,object)),JSON.stringify(object)}})})();